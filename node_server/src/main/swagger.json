{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "PointSpire API",
    "description": "API for querying the MongoDB for PointSpire"
  },
  "components": {
    "parameters": {
      "userIdParam": {
        "name": "userId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "projectIdParam": {
        "name": "projectId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "userObjectBasis": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "githubId": {
            "type": "string"
          },
          "dateCreated": {
            "description": "A Date object representing the date this user was created.",
            "type": "object"
          }
        }
      },
      "userObjectProjectIds": {
        "type": "object",
        "properties": {
          "projects": {
            "type": "array",
            "description": "An array of ObjectIds associated with the projects under this user.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "userObjectProjects": {
        "type": "object",
        "properties": {
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/projectObjectWithTasks"
            }
          }
        }
      },
      "userObjectWithIds": {
        "allOf": [
          {
            "$ref": "#/components/schemas/userObjectBasis"
          },
          {
            "$ref": "#/components/schemas/userObjectProjectIds"
          }
        ]
      },
      "userObjectWithProjects": {
        "allOf": [
          {
            "$ref": "#/components/schemas/userObjectBasis"
          },
          {
            "$ref": "#/components/schemas/userObjectProjects"
          }
        ]
      },
      "projectObjectBasis": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "date": {
            "type": "object",
            "description": "A Date object representing the date this project was created."
          }
        }
      },
      "projectObjectTaskIds": {
        "type": "object",
        "properties": {
          "subtasks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "projectObjectTasks": {
        "type": "object",
        "properties": {
          "subtasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/taskObject"
            }
          }
        }
      },
      "projectObjectWithIds": {
        "allOf": [
          {
            "$ref": "#/components/schemas/projectObjectBasis"
          },
          {
            "$ref": "#/components/schemas/projectObjectTaskIds"
          }
        ]
      },
      "projectObjectWithTasks": {
        "allOf": [
          {
            "$ref": "#/components/schemas/projectObjectBasis"
          },
          {
            "$ref": "#/components/schemas/projectObjectTasks"
          }
        ]
      },
      "taskObject": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "date": {
            "type": "object",
            "description": "A Date object representing the date this task was created."
          }
        }
      }
    }
  },
  "paths": {
    "/users": {
      "post": {
        "summary": "Creates a new user with the details specified in the body",
        "requestBody": {
          "description": "The properties of the new user to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["userName"],
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "githubId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user was successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userObjectWithIds"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Gets the user at the specified ID",
        "responses": {
          "200": {
            "description": "Successfully returned the user document with the specified userId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userObjectWithProjects"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Modifies the user at the specified ID",
        "description": "Modifies the user at the specified ID with the details provided in the body of the request",
        "requestBody": {
          "description": "The new properties of the user. These will overwrite the existing properties.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "githubId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user was successfully overwritten with the provided data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userObjectWithIds"
                }
              }
            }
          },
          "400": {
            "description": "The userId was not found or there was an error while accessing the database."
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/userIdParam"
        }
      ]
    },
    "/users/{userId}/projects": {
      "post": {
        "summary": "Creates a new project for the user indicated by the userId",
        "requestBody": {
          "description": "The properties of the new project to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title"],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  }
                },
                "example": {
                  "title": "Fix the fence",
                  "note": "Need to visit the store to see what kind of wood they have."
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "The userId was not found or there was an error while searching it"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/userIdParam"
        }
      ]
    },
    "/projects/{projectId}": {
      "get": {
        "summary": "Gets the project with the specified ID",
        "responses": {
          "200": {
            "description": "The project was successfully found and returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/projectObjectWithIds"
                }
              }
            }
          },
          "400": {
            "description": "The project ID didn't correspond to one in the database or there was an error while accessing the database."
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/projectIdParam"
        }
      ]
    }
  }
}
